import matplotlib.pylab as plt
import argparse

ap = argparse.ArgumentParser()
ap.add_argument("-n", "--nLines", type=int, required=True, help="Number of lines to plot")
ap.add_argument("-x1", "--xVector1", nargs='+', type=float, help="Vector with x coordinates")
ap.add_argument("-y1", "--yVector1", nargs='+', type=float, help="Vector with y coordinates")
ap.add_argument("-x2", "--xVector2", nargs='+', type=float, help="Vector with x coordinates")
ap.add_argument("-y2", "--yVector2", nargs='+', type=float, help="Vector with y coordinates")
ap.add_argument("-x3", "--xVector3", nargs='+', type=float, help="Vector with x coordinates")
ap.add_argument("-y3", "--yVector3", nargs='+', type=float, help="Vector with y coordinates")
ap.add_argument("-x4", "--xVector4", nargs='+', type=float, help="Vector with x coordinates")
ap.add_argument("-y4", "--yVector4", nargs='+', type=float, help="Vector with y coordinates")
ap.add_argument("-x5", "--xVector5", nargs='+', type=float, help="Vector with x coordinates")
ap.add_argument("-y5", "--yVector5", nargs='+', type=float, help="Vector with y coordinates")
ap.add_argument("-x6", "--xVector6", nargs='+', type=float, help="Vector with x coordinates")
ap.add_argument("-y6", "--yVector6", nargs='+', type=float, help="Vector with y coordinates")
ap.add_argument("-x7", "--xVector7", nargs='+', type=float, help="Vector with x coordinates")
ap.add_argument("-y7", "--yVector7", nargs='+', type=float, help="Vector with y coordinates")
ap.add_argument("-x8", "--xVector8", nargs='+', type=float, help="Vector with x coordinates")
ap.add_argument("-y8", "--yVector8", nargs='+', type=float, help="Vector with y coordinates")
ap.add_argument("-x9", "--xVector9", nargs='+', type=float, help="Vector with x coordinates")
ap.add_argument("-y9", "--yVector9", nargs='+', type=float, help="Vector with y coordinates")
ap.add_argument("-x10", "--xVector10", nargs='+', type=float, help="Vector with x coordinates")
ap.add_argument("-y10", "--yVector10", nargs='+', type=float, help="Vector with y coordinates")
ap.add_argument("-x11", "--xVector11", nargs='+', type=float, help="Vector with x coordinates")
ap.add_argument("-y11", "--yVector11", nargs='+', type=float, help="Vector with y coordinates")
ap.add_argument("-x12", "--xVector12", nargs='+', type=float, help="Vector with x coordinates")
ap.add_argument("-y12", "--yVector12", nargs='+', type=float, help="Vector with y coordinates")
ap.add_argument("-x13", "--xVector13", nargs='+', type=float, help="Vector with x coordinates")
ap.add_argument("-y13", "--yVector13", nargs='+', type=float, help="Vector with y coordinates")
ap.add_argument("-x14", "--xVector14", nargs='+', type=float, help="Vector with x coordinates")
ap.add_argument("-y14", "--yVector14", nargs='+', type=float, help="Vector with y coordinates")
ap.add_argument("-x15", "--xVector15", nargs='+', type=float, help="Vector with x coordinates")
ap.add_argument("-y15", "--yVector15", nargs='+', type=float, help="Vector with y coordinates")
ap.add_argument("-x16", "--xVector16", nargs='+', type=float, help="Vector with x coordinates")
ap.add_argument("-y16", "--yVector16", nargs='+', type=float, help="Vector with y coordinates")
ap.add_argument("-x17", "--xVector17", nargs='+', type=float, help="Vector with x coordinates")
ap.add_argument("-y17", "--yVector17", nargs='+', type=float, help="Vector with y coordinates")
ap.add_argument("-x18", "--xVector18", nargs='+', type=float, help="Vector with x coordinates")
ap.add_argument("-y18", "--yVector18", nargs='+', type=float, help="Vector with y coordinates")
ap.add_argument("-x19", "--xVector19", nargs='+', type=float, help="Vector with x coordinates")
ap.add_argument("-y19", "--yVector19", nargs='+', type=float, help="Vector with y coordinates")
args = vars(ap.parse_args())

#plt.axhline(0, color='k')
#plt.axvline(0, color='k')
for i in range(0, args["nLines"]):
	plt.plot(args["xVector"+str(i+1)], args["yVector"+str(i+1)])
	#plt.plot(args["xVector"+str(i+1)], args["yVector"+str(i+1)], "o")
plt.show() 